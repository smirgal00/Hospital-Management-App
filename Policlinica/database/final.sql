-- MySQL Script generated by MySQL Workbench
-- Wed Jan 15 14:13:51 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema proiect
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema proiect
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `proiect` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `proiect` ;

-- -----------------------------------------------------
-- Table `proiect`.`angajat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`angajat` (
  `id` INT(11) NOT NULL,
  `nume` VARCHAR(20) NULL DEFAULT NULL,
  `prenume` VARCHAR(20) NULL DEFAULT NULL,
  `functie` ENUM('Medic', 'Receptioner', 'Administrator', 'Asistent Medical', 'HR', 'Contabil') NULL DEFAULT NULL,
  `Specializare` ENUM('Cardiolog', 'Neurolog', 'Oncolog', 'Urolog', 'Oftamolog', 'Ginecolog', 'Endocrinolog') NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`bon_fiscal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`bon_fiscal` (
  `nrBon` INT(11) NOT NULL AUTO_INCREMENT,
  `dataEmitere` DATE NULL DEFAULT NULL,
  `servicii` VARCHAR(20) NULL DEFAULT NULL,
  `id_receptioner` INT(11) NULL DEFAULT NULL,
  `pret` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`nrBon`),
  INDEX `id_receptioner` (`id_receptioner` ASC) VISIBLE,
  CONSTRAINT `bon_fiscal_ibfk_1`
    FOREIGN KEY (`id_receptioner`)
    REFERENCES `proiect`.`angajat` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`spital`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`spital` (
  `id_Spital` INT(11) NOT NULL AUTO_INCREMENT,
  `nume` VARCHAR(50) NULL DEFAULT NULL,
  `adresa` VARCHAR(50) NULL DEFAULT NULL,
  `oras` VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (`id_Spital`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`cheltuieli`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`cheltuieli` (
  `id_spital` INT(11) NOT NULL,
  `luna` VARCHAR(15) NULL DEFAULT NULL,
  `cheltuieli` FLOAT NULL DEFAULT NULL,
  INDEX `id_spital` (`id_spital` ASC) VISIBLE,
  CONSTRAINT `cheltuieli_ibfk_1`
    FOREIGN KEY (`id_spital`)
    REFERENCES `proiect`.`spital` (`id_Spital`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`concediu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`concediu` (
  `id_angajat` INT(11) NOT NULL,
  `durata` INT(11) NULL DEFAULT NULL,
  `data_inceput` DATE NULL DEFAULT NULL,
  `data_final` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id_angajat`),
  CONSTRAINT `concediu_ibfk_1`
    FOREIGN KEY (`id_angajat`)
    REFERENCES `proiect`.`angajat` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`pacient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`pacient` (
  `idPacient` INT(11) NOT NULL,
  `nume` VARCHAR(20) NULL DEFAULT NULL,
  `prenume` VARCHAR(20) NULL DEFAULT NULL,
  `adresa` VARCHAR(50) NULL DEFAULT NULL,
  `oras` VARCHAR(50) NULL DEFAULT NULL,
  `sex` ENUM('M', 'F') NULL DEFAULT NULL,
  `grupa` ENUM('OI', 'AII', 'BIII', 'ABIV') NULL DEFAULT NULL,
  `CNP` VARCHAR(13) NOT NULL,
  PRIMARY KEY (`idPacient`, `CNP`),
  UNIQUE INDEX `CNP` (`CNP` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`istoric`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`istoric` (
  `idPacient` INT(11) NOT NULL,
  `CNP` VARCHAR(13) NOT NULL,
  `Consultatie` VARCHAR(1000) NULL DEFAULT NULL,
  PRIMARY KEY (`CNP`, `idPacient`),
  UNIQUE INDEX `CNP` (`CNP` ASC) VISIBLE,
  CONSTRAINT `istoric_ibfk_1`
    FOREIGN KEY (`CNP`)
    REFERENCES `proiect`.`pacient` (`CNP`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`orar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`orar` (
  `idAngajat` INT(11) NOT NULL,
  `momI` INT(11) NULL DEFAULT NULL,
  `momF` INT(11) NULL DEFAULT NULL,
  `dataOrar` DATE NULL DEFAULT NULL,
  `idSpital` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`idAngajat`),
  INDEX `idSpital` (`idSpital` ASC) VISIBLE,
  CONSTRAINT `orar_ibfk_1`
    FOREIGN KEY (`idAngajat`)
    REFERENCES `proiect`.`angajat` (`id`),
  CONSTRAINT `orar_ibfk_2`
    FOREIGN KEY (`idSpital`)
    REFERENCES `proiect`.`spital` (`id_Spital`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`servicii`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`servicii` (
  `id_serviciu` INT(11) NOT NULL AUTO_INCREMENT,
  `nume_serviciu` VARCHAR(20) NULL DEFAULT NULL,
  `durata_serviciu` INT(11) NULL DEFAULT NULL,
  `Specializare` ENUM('Cardiolog', 'Neurolog', 'Oncolog', 'Urolog', 'Oftamolog', 'Ginecolog', 'Endocrinolog') NULL DEFAULT NULL,
  `pret` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`id_serviciu`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`programare`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`programare` (
  `idProgramare` INT(11) NOT NULL AUTO_INCREMENT,
  `idReceptioner` INT(11) NULL DEFAULT NULL,
  `cnpPacient` VARCHAR(20) NULL DEFAULT NULL,
  `dataProgramare` DATE NULL DEFAULT NULL,
  `idMedic` INT(11) NULL DEFAULT NULL,
  `idServiciu` INT(11) NULL DEFAULT NULL,
  `durata` INT(11) NULL DEFAULT NULL,
  `diagnostic` VARCHAR(50) NULL DEFAULT NULL,
  `decizie` VARCHAR(1500) NULL DEFAULT NULL,
  `idSpital` INT(11) NULL DEFAULT NULL,
  `idPacient` INT(11) NULL DEFAULT NULL,
  `parafa` TINYINT(1) NULL DEFAULT NULL,
  PRIMARY KEY (`idProgramare`),
  INDEX `idReceptioner` (`idReceptioner` ASC) VISIBLE,
  INDEX `idMedic` (`idMedic` ASC) VISIBLE,
  INDEX `idPacient` (`idPacient` ASC) VISIBLE,
  INDEX `cnpPacient` (`cnpPacient` ASC) VISIBLE,
  INDEX `idSpital` (`idSpital` ASC) VISIBLE,
  INDEX `idServiciu` (`idServiciu` ASC) VISIBLE,
  CONSTRAINT `programare_ibfk_1`
    FOREIGN KEY (`idReceptioner`)
    REFERENCES `proiect`.`angajat` (`id`),
  CONSTRAINT `programare_ibfk_2`
    FOREIGN KEY (`idMedic`)
    REFERENCES `proiect`.`angajat` (`id`),
  CONSTRAINT `programare_ibfk_3`
    FOREIGN KEY (`idPacient`)
    REFERENCES `proiect`.`pacient` (`idPacient`),
  CONSTRAINT `programare_ibfk_4`
    FOREIGN KEY (`cnpPacient`)
    REFERENCES `proiect`.`pacient` (`CNP`),
  CONSTRAINT `programare_ibfk_5`
    FOREIGN KEY (`idSpital`)
    REFERENCES `proiect`.`spital` (`id_Spital`),
  CONSTRAINT `programare_ibfk_6`
    FOREIGN KEY (`idServiciu`)
    REFERENCES `proiect`.`servicii` (`id_serviciu`))
ENGINE = InnoDB
AUTO_INCREMENT = 9
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`salarii`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`salarii` (
  `id_angajat` INT(11) NOT NULL,
  `net` FLOAT NULL DEFAULT NULL,
  `brut` FLOAT NULL DEFAULT NULL,
  `comision` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`id_angajat`),
  CONSTRAINT `salarii_ibfk_1`
    FOREIGN KEY (`id_angajat`)
    REFERENCES `proiect`.`angajat` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `proiect`.`venituri`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proiect`.`venituri` (
  `id_spital` INT(11) NOT NULL,
  `luna` VARCHAR(15) NULL DEFAULT NULL,
  `venit` FLOAT NULL DEFAULT NULL,
  INDEX `id_spital` (`id_spital` ASC) VISIBLE,
  CONSTRAINT `venituri_ibfk_1`
    FOREIGN KEY (`id_spital`)
    REFERENCES `proiect`.`spital` (`id_Spital`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `proiect` ;

-- -----------------------------------------------------
-- procedure Adauga_pacient
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `Adauga_pacient`(nume varchar(20), prenume varchar(20), adresa varchar(50), oras varchar(50), sex enum('M','F'), grupa enum('OI','AII','BIII','ABIV'),CNP varchar(13))
BEGIN
  SET @exista=NULL;
        
		SELECT @lastpacient:=MAX(idPacient) from pacient;
        
        if @lastpacient is null then
         SET @lastpacient=1;
         else
         SET @lastpacient=@lastpacient+1;
        END IF;
        SELECT @exista:=CNP FROM pacient where pacient.CNP=CNP;
        if @exista is NULL then
            INSERT INTO pacient(idPacient,nume,prenume,adresa,oras,sex,grupa,CNP) 
				values (@lastpacient,nume,prenume,adresa,oras,sex,grupa,CNP);
			INSERT INTO istoric(idPacient,CNP) values(@lastpacient,CNP);
           END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure Adauga_programare2
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `Adauga_programare2`(idPacient int, idReceptioner int, cnpPacient varchar(20), dataProgramare date, idServicu int, idMedic int, durata int, idSpital int)
begin
	if (dataProgramare >=CURDATE()) then
    if exists( select id_angajat from concediu where id_angajat = idMedic)
	then
		if exists( select data_inceput, data_final from concediu where data_inceput > dataProgramare or data_final < dataProgramare)
    then
    set @lastpacient = NULL;
    select @lastPacient := max(idProgramare) from programare;
			if @lastPacient = NULL then set @lastPacient = 1;
    else set @lastpacient := @lastpacient + 1;
    select @pacient := max(idPacient) from pacient;
        insert into programare(idProgramare, idPacient, idReceptioner, cnpPacient, dataProgramare, idServiciu, idMedic, durata, idSpital)
	values(@lastpacient, idPacient, idReceptioner, cnpPacient, dataProgramare, idServiciu, idMedic, durata, idSpital);			end if;
		end if;
    else
    set @lastpacient = NULL;
    select @lastPacient := max(idProgramare) from programare;
		if @lastPacient = NULL then set @lastPacient = 1;
    else set @lastpacient := @lastpacient + 1;
    select @pacient := max(idPacient) from pacient;
        insert into programare(idProgramare, idPacient, idReceptioner, cnpPacient, dataProgramare, idServiciu, idMedic, durata, idSpital)
    values(@lastpacient, idPacient, idReceptioner, cnpPacient, dataProgramare, idServiciu, idMedic, durata, idSpital);
		end if;
	end if;
    end if;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure Adaugare_concediu
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `Adaugare_concediu`(id_angajat int, durata int, data_inceput date, data_final date)
begin
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure adaugare_economie
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `adaugare_economie`(idSpital int, luna varchar(15), venituri float, cheltuieli float)
begin
	insert into venituri(id_Spital, luna, venit) values (idSpital, luna, venituri);
    insert into cheltuieli(id_Spital, luna, cheltuieli) values (idSpital, luna, cheltuieli);
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure afis_raport
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `afis_raport`(idPacient int)
begin
select nume, prenume, grupa, decizie, idServiciu from pacient, programare
where idPacient = programare.idPacient and idPacient = pacient.idPacient;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure cautare_profitSpital
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `cautare_profitSpital`(idSpital int)
begin
	select venituri.id_spital ,venituri.luna,venituri.venit-cheltuieli.cheltuieli as Profit_spital from venituri
    inner join cheltuieli where venituri.luna=cheltuieli.luna and cheltuieli.id_spital=venituri.id_spital and cheltuieli.id_spital=idSpital;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure cautare_salariu
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `cautare_salariu`(id_angajat int)
begin
	select id_angajat,net,brut from salarii
	where salarii.id_angajat = id_angajat;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure completare_raport
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `completare_raport`(idProgramar int, durat varchar(50), diagnosti varchar(1500))
begin
update programare
set durata = durat, diagnostic = diagnosti where programare.idProgramare = idProgramar;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure delete_angajat
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_angajat`(idAngajat int)
begin
	delete from angajat where idAngajat = id;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure emitere_bon
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `emitere_bon`(dataEmitere date, servicii varchar(20),idReceptioner int, pret int)
BEGIN
  SET @exista=NULL;
        
		SELECT @lastbon:=MAX(nrBon) from bon_fiscal;
        
        if @lastbon is null then
         SET @lastbon=1;
         else
         SET @lastbon=@lastbon+1;
        END IF;
            INSERT INTO bon_fiscal(nrBon,dataEmitere,servicii,id_receptioner,pret) 
				values (@lastbon,dataEmitere,servicii,idReceptioner,pret);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure find_user
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_user`(nume varchar(50), prenume varchar(50))
begin
select * from angajat where angajat.nume = nume and angajat.prenume = prenume;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure ins_angajat
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `ins_angajat`(nume varchar(50),prenume varchar(50),functie enum('Medic','Receptioner','Administrator','Asistent Medical','HR','Contabil'),Specializare ENUM('Cardiolog', 'Neurolog', 'Oncolog', 'Urolog', 'Oftamolog', 'Ginecolog', 'Endocrinolog','Fara specializare'))
begin
		set @var = 'Medic';
		SELECT @lastangajat:=MAX(id) from angajat;
        if @lastangajat is null then
         SET @lastangajat=1;
         else
         SET @lastangajat=@lastangajat+1;
        END IF;
        if functie <> @var then
		INSERT INTO angajat(id,nume,prenume,functie,Specializare) values (@lastangajat,nume,prenume,functie,NULL);
		else
		INSERT INTO angajat(id,nume,prenume,functie,Specializare) values (@lastangajat,nume,prenume,functie,Specializare);
         end if;  
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insert_salariu
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_salariu`(id_angajat int , brut int )
begin
	set @var = (brut * 57)/100;
    if exists(select salarii.id_angajat from salarii where salarii.id_angajat = id_angajat) then
    update salarii
    set salarii.brut = brut, net = @var where salarii.id_angajat = id_angajat;
    else 
    insert into salarii(id_angajat, net, brut, comision) 
    values(id_angajat, @var, brut, 57);
    end if;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure parafa
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `parafa`(idProgramare int, decizi varchar(1500), paraf bool)
begin
update programare 
set decizie = decizi, parafa = paraf where programare.idProgramare = idProgramare; 
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure show_schedule
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `show_schedule`()
begin
select * from orar inner join angajat on orar.idAngajat = angajat.id;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure show_schedule_person
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `show_schedule_person`(nume varchar(50), prenume varchar(50))
begin
select * from orar inner join angajat on orar.idAngajat = angajat.id and angajat.nume = nume and angajat.prenume = prenume;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure show_schedule_spec
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `show_schedule_spec`(specializare varchar(50))
begin
select * from angajat inner join orar on angajat.id = orar.idAngajat and angajat.specializare = Specializare;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure show_schedule_unit
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `show_schedule_unit`(nume_spital varchar(50))
begin
select * from angajat inner join orar on angajat.id = orar.idAngajat inner join spital on orar.idSpital = spital.id_Spital and spital.nume = nume_spital;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_angajat
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_angajat`(idAngajat int)
begin
	select * from angajat where angajat.id = idAngajat ;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_bon
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_bon`()
begin
select * from bon_fiscal;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_cheltuieli_venituri
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_cheltuieli_venituri`()
begin 
select * from venituri inner join cheltuieli on cheltuieli.luna = venituri.luna and cheltuieli.id_spital=venituri.id_spital;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_istoric
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_istoric`()
begin
select * from istoric;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_istoric_pacient
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_istoric_pacient`(nume varchar(50), prenume varchar(50))
begin
select nume, prenume, cnpPacient, idMedic, idServiciu, diagnostic, decizie, idSpital from programare, pacient where nume = pacient.nume and prenume = pacient.prenume and pacient.CNP = programare.cnpPacient;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_pac_ex
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_pac_ex`(id int)
begin
select * from pacient where idPacient = id;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_pacienti
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_pacienti`()
begin
select * from pacient;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_profit
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_profit`()
begin 
select venituri.id_spital,venituri.luna,venituri.venit-cheltuieli.cheltuieli as Profit_spital from venituri inner join cheltuieli on cheltuieli.luna = venituri.luna and cheltuieli.id_spital=venituri.id_spital;
end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure viz_programari
-- -----------------------------------------------------

DELIMITER $$
USE `proiect`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `viz_programari`()
begin 
select * from pacient inner join programare on pacient.cnp = programare.cnpPacient;
end$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
